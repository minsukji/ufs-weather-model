name: Pull Request Tests

on:
  push:
    branches:
    - feature/ContInteg
  pull_request:
    branches:
    - feature/ContInteg

jobs:
  job1:
    name: determine cases to run
    runs-on: ubuntu-latest

    outputs:
      mtx: ${{ steps.parse.outputs.m }}

    steps:
    - name: Checkout codes
      uses: actions/checkout@v2

    - name: Parse cases
      id: parse
      run: echo "::set-output name=m::$(sed -n 2p ${GITHUB_WORKSPACE}/tests/ci.test)"

  job2:
    name: ${{ matrix.kind }} test
    needs: job1
    runs-on: ubuntu-latest
    #runs-on: self-hosted

    strategy:
      matrix: ${{ fromJson(needs.job1.outputs.mtx) }}

    steps:
    - name: Checkout codes
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Build
      run: |
        printf '{\n    "experimental": true\n}' | sudo tee /etc/docker/daemon.json >/dev/null
        sudo systemctl restart docker
        sleep 10
        cd tests && ./ci.sh -b -c ${{ matrix.kind }}

    - name: Free up disk space
      run: |
        docker rmi $(docker image ls | grep -E -m1 '<none>' | awk '{ print $3 }')
        docker rmi $(docker image ls | awk '/fv3-input-data/ { print $3 }')
        docker rmi $(docker image ls | awk '/ci-test-base/ { print $3 }')

    - name: Run utest
      run: cd tests && ./ci.sh -r

    - name: Upload memory usage file
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: memory_stat_${{ matrix.kind }}
        path: tests/memory_stat
